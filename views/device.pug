extends layout-history.pug

block head
  link(rel='stylesheet', href='/stylesheets/typeaheadjs.css')
  title #{device.name} :: RunCheck

block content
  .container
    #message
    #device-details
      .row
        .col-md-6
          h3 Device
          include ./client-side/device-details.pug
          hr

  //- .container.btn-toolbar
    if device.checklist
      button.btn.btn-space.btn-primary(id='device-add-checklist' disabled='disabled') Add Checklist
    else
      button.btn.btn-space.btn-primary(id='device-add-checklist') Add Checklist
    button.btn.btn-space.btn-primary(id = 'reject-install') Reject
    button.btn.btn-space.btn-primary(id = 'approve-install') Approve
    button.btn.btn-space.btn-primary(id = 'install') Install
    button.btn.btn-space.btn-danger(id = 'set-not-installed') Set not installed
  br
  .container
    .row
      .col-md-6
        .panel.panel-default
          .panel-heading.clearfix
            .pull-left
              h4 Installation Slot
            .pull-right
              button.btn.btn-primary.hidden#install(disabled='disabled') Install
              button.btn.btn-primary.hidden#uninstall(disabled='disabled') Uninstall
          .panel-body.hidden#install-panel
    .row
      .col-md-12
        .panel.panel-default
          .panel-heading.clearfix
            .pull-left
              h4 Checklist
            .pull-right
              h4.fa.fa-spinner.fa-spin.hidden#device-checklist-spin
              button.btn.btn-primary.hidden#device-assign-checklist(disabled='disabled') Assign
            //- .row
              .col-md-4
                h3
                  | Checklist
              .col-md-8.text-right
                h3
                  button.btn.btn-primary(id='device-assign-checklist' disabled='disabled') Assign
          .panel-body.hidden#device-checklist-panel
  //-- var notInstalled = _.get(device, 'installToDevice.id') === null && _.get(device, 'installToSlot.id') === null;
  //- .panel.panel-default(id = 'prepare-panel', class=notInstalled? '' : 'hidden')
    .panel-heading
      .btn-group
        button.btn.btn-space.btn-primary.dropdown-toggle(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')#preInstall
          | Prepare install
          = ' '
          span.caret
        ul.dropdown-menu
          li
            a.prepare-install device
          li
            a.prepare-install slot
      strong(id = 'prepare-title')
    .panel-body
      form.form-inline.slot.hidden
        .form-group
          label Slot:
          = ' '
          .input-group
            input.form-control(type='text')
        = ' '
        button.btn.btn-space.btn-primary(type='submit', value='slot') Confirm
        button.btn.btn-space(type='reset') Cancel
      form.form-inline.device.hidden
        .form-group
          label Device:
          = ' '
          .input-group
            input.form-control(type='text')
        = ' '
        button.btn.btn-space.btn-primary(type='submit', value='device') Confirm
        button.btn.btn-space(type='reset') Cancel
//-  .well
    #irrChecklist
//- block history
  each h in device.__updates.reverse()
    +change(h, moment)
block js
  //- script(type='text/javascript', src='/typeahead.js/dist/typeahead.bundle.js')
  //- script(type='text/javascript', src='/javascripts/typeahead.js')
  script(type='text/javascript', src='/js/device-action.js')
  script(type='text/javascript', src='/javascripts/template/device-details.js')
  script(type='text/javascript', src='/js/checklistutil.js')
  script(type='text/javascript', src='/javascripts/template/slot-details.js')
  script(type='text/javascript', src='/javascripts/template/checklist-input.js')
  script(type='text/javascript', src='/javascripts/template/checklist-config.js')
  script(type='text/javascript', src='/javascripts/template/checklist-config-item.js')

  script(type='text/javascript')
    | device = !{JSON.stringify(device)};

  script(type='text/javascript', src='/js/authutil.js')
  script(type='text/javascript')
    | AuthUtil.setUsername('#{auth.username}');
    if auth.user && auth.user.roles
      each role in auth.user.roles
        | AuthUtil.addRole('#{role}');
